/* BHT (Branch History Table) */

module bht #(
    parameter ADDR_WIDTH = 6,  // Ancho de la dirección (64 direcciones)
    parameter COUNTER_BITS = 2   // Ancho del contador (2 bits = 4 opciones)
)(         
    input wire [ADDR_WIDTH-1:0] address,
	input wire stage_clk,
	input wire reset,		

    output wire taken_prediction
);

// Creo una tabla con ADDR_WIDTH entradas, cada una de COUNTER_BITS bits
reg[COUNTER_BITS-1:0] bht_table [0:ADDR_WIDTH-1];
reg predictor [COUNTER_BITS-1:0];

// Inicializo en 0 la tabla
initial begin
    for (i = 0; i < 2**ADDR_WIDTH; i = i + 1) begin
        bht_table[i] = COUNTER_BITS'd0;
    end
end

// Actualización de la tabla (a definir)
//always @(posedge stage_clk) begin
//	else begin
//		pc <= pc_next;
//		instr <= instr_in;
//	end
//end

// Lectura de la tabla
always @(address) begin
	taken_prediction = bht_table[address][COUNTER_BITS-1];
end


endmodule