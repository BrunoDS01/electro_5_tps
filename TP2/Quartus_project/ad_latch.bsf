/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/
/*
Copyright (C) 2025  Altera Corporation. All rights reserved.
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, the Altera Quartus Prime License Agreement,
the Altera IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Altera and sold by Altera or its authorized distributors.  Please
refer to the Altera Software License Subscription Agreements 
on the Quartus Prime software download page.
*/
(header "symbol" (version "1.1"))
(symbol
	(rect 16 16 328 288)
	(text "ad_latch" (rect 5 0 38 12)(font "Arial" ))
	(text "inst" (rect 8 256 20 268)(font "Arial" ))
	(port
		(pt 0 32)
		(input)
		(text "prev_pc[31..0]" (rect 0 0 57 12)(font "Arial" ))
		(text "prev_pc[31..0]" (rect 21 27 78 39)(font "Arial" ))
		(line (pt 0 32)(pt 16 32)(line_width 3))
	)
	(port
		(pt 0 48)
		(input)
		(text "address_target[31..0]" (rect 0 0 83 12)(font "Arial" ))
		(text "address_target[31..0]" (rect 21 43 104 55)(font "Arial" ))
		(line (pt 0 48)(pt 16 48)(line_width 3))
	)
	(port
		(pt 0 64)
		(input)
		(text "flag_branch[1..0]" (rect 0 0 66 12)(font "Arial" ))
		(text "flag_branch[1..0]" (rect 21 59 87 71)(font "Arial" ))
		(line (pt 0 64)(pt 16 64)(line_width 3))
	)
	(port
		(pt 0 80)
		(input)
		(text "prev_counter[1..0]" (rect 0 0 73 12)(font "Arial" ))
		(text "prev_counter[1..0]" (rect 21 75 94 87)(font "Arial" ))
		(line (pt 0 80)(pt 16 80)(line_width 3))
	)
	(port
		(pt 0 96)
		(input)
		(text "prev_valid" (rect 0 0 42 12)(font "Arial" ))
		(text "prev_valid" (rect 21 91 63 103)(font "Arial" ))
		(line (pt 0 96)(pt 16 96)(line_width 1))
	)
	(port
		(pt 0 112)
		(input)
		(text "prev_branch_prediction" (rect 0 0 94 12)(font "Arial" ))
		(text "prev_branch_prediction" (rect 21 107 115 119)(font "Arial" ))
		(line (pt 0 112)(pt 16 112)(line_width 1))
	)
	(port
		(pt 0 128)
		(input)
		(text "rd_memory" (rect 0 0 49 12)(font "Arial" ))
		(text "rd_memory" (rect 21 123 70 135)(font "Arial" ))
		(line (pt 0 128)(pt 16 128)(line_width 1))
	)
	(port
		(pt 0 144)
		(input)
		(text "wr_memory" (rect 0 0 50 12)(font "Arial" ))
		(text "wr_memory" (rect 21 139 71 151)(font "Arial" ))
		(line (pt 0 144)(pt 16 144)(line_width 1))
	)
	(port
		(pt 0 160)
		(input)
		(text "funct3_[2..0]" (rect 0 0 50 12)(font "Arial" ))
		(text "funct3_[2..0]" (rect 21 155 71 167)(font "Arial" ))
		(line (pt 0 160)(pt 16 160)(line_width 3))
	)
	(port
		(pt 0 176)
		(input)
		(text "stg_clk" (rect 0 0 28 12)(font "Arial" ))
		(text "stg_clk" (rect 21 171 49 183)(font "Arial" ))
		(line (pt 0 176)(pt 16 176)(line_width 1))
	)
	(port
		(pt 0 192)
		(input)
		(text "stg_ena" (rect 0 0 31 12)(font "Arial" ))
		(text "stg_ena" (rect 21 187 52 199)(font "Arial" ))
		(line (pt 0 192)(pt 16 192)(line_width 1))
	)
	(port
		(pt 0 208)
		(input)
		(text "stg_x" (rect 0 0 22 12)(font "Arial" ))
		(text "stg_x" (rect 21 203 43 215)(font "Arial" ))
		(line (pt 0 208)(pt 16 208)(line_width 1))
	)
	(port
		(pt 0 224)
		(input)
		(text "reset" (rect 0 0 20 12)(font "Arial" ))
		(text "reset" (rect 21 219 41 231)(font "Arial" ))
		(line (pt 0 224)(pt 16 224)(line_width 1))
	)
	(port
		(pt 312 32)
		(output)
		(text "prev_pc_out[31..0]" (rect 0 0 75 12)(font "Arial" ))
		(text "prev_pc_out[31..0]" (rect 216 27 291 39)(font "Arial" ))
		(line (pt 312 32)(pt 296 32)(line_width 3))
	)
	(port
		(pt 312 48)
		(output)
		(text "address_target_out[31..0]" (rect 0 0 101 12)(font "Arial" ))
		(text "address_target_out[31..0]" (rect 190 43 291 55)(font "Arial" ))
		(line (pt 312 48)(pt 296 48)(line_width 3))
	)
	(port
		(pt 312 64)
		(output)
		(text "flag_branch_out[1..0]" (rect 0 0 83 12)(font "Arial" ))
		(text "flag_branch_out[1..0]" (rect 208 59 291 71)(font "Arial" ))
		(line (pt 312 64)(pt 296 64)(line_width 3))
	)
	(port
		(pt 312 80)
		(output)
		(text "prev_counter_out[1..0]" (rect 0 0 90 12)(font "Arial" ))
		(text "prev_counter_out[1..0]" (rect 201 75 291 87)(font "Arial" ))
		(line (pt 312 80)(pt 296 80)(line_width 3))
	)
	(port
		(pt 312 96)
		(output)
		(text "prev_valid_out" (rect 0 0 60 12)(font "Arial" ))
		(text "prev_valid_out" (rect 231 91 291 103)(font "Arial" ))
		(line (pt 312 96)(pt 296 96)(line_width 1))
	)
	(port
		(pt 312 112)
		(output)
		(text "prev_branch_prediction_out" (rect 0 0 112 12)(font "Arial" ))
		(text "prev_branch_prediction_out" (rect 179 107 291 119)(font "Arial" ))
		(line (pt 312 112)(pt 296 112)(line_width 1))
	)
	(port
		(pt 312 128)
		(output)
		(text "rd_memory_out" (rect 0 0 67 12)(font "Arial" ))
		(text "rd_memory_out" (rect 224 123 291 135)(font "Arial" ))
		(line (pt 312 128)(pt 296 128)(line_width 1))
	)
	(port
		(pt 312 144)
		(output)
		(text "wr_memory_out" (rect 0 0 68 12)(font "Arial" ))
		(text "wr_memory_out" (rect 223 139 291 151)(font "Arial" ))
		(line (pt 312 144)(pt 296 144)(line_width 1))
	)
	(port
		(pt 312 160)
		(output)
		(text "funct3_out[2..0]" (rect 0 0 62 12)(font "Arial" ))
		(text "funct3_out[2..0]" (rect 229 155 291 167)(font "Arial" ))
		(line (pt 312 160)(pt 296 160)(line_width 3))
	)
	(drawing
		(rectangle (rect 16 16 296 256)(line_width 1))
	)
)
